# -- show databases
#  select name from v$database;
#  select username from dba_users;
# -- show tables
#  select table_name from user_tables;
#  SELECT table_name FROM all_tables;
# -- show create table
#  select DBMS_METADATA.GET_DDL('TABLE','TABLE NAME'[,'SCHEMA']) from DUAL
# -- show create view
#  SELECT VIEW_NAME, TEXT FROM USER_VIEWS;
#  select dbms_metadata.get_ddl('VIEW', 'VIEW_NAME', 'VIEW_OWNER') from dual;

D18N_ORACLE_ARGS=--server oracle --host 127.0.0.1 --port 1521 --user system --password oracle --database xe

# https://github.com/MaksymBilenko/docker-oracle-12c
# https://github.com/MaksymBilenko/docker-oracle-xe-11g
# https://github.com/gvenzl/oci-oracle-xe
# ORACLE_IMAGE=maksymbilenko/oracle-xe-11g make docker-oracle
# ORACLE_IMAGE=gvenzl/oracle-xe:21-slim make docker-oracle
ORACLE_IMAGE := $(or ${ORACLE_IMAGE}, ${ORACLE_IMAGE}, maksymbilenko/oracle-12c)

# Oracle-11g container need unset HTTP Proxy ENV
unexport http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

.PHONY: docker-oracle
docker-oracle: docker-exist
	@${DOCKER_CMD} stop d18n-oracle 2>/dev/null || true
	@${DOCKER_CMD} wait d18n-oracle 2>/dev/null >/dev/null || true
	@${DOCKER_CMD} rm d18n-oracle 2>/dev/null >/dev/null || true
	@${DOCKER_CMD} run -d ${DOCKER_RM} \
	--name d18n-oracle \
	-p 1521:1521 \
	-e ORACLE_PASSWORD=oracle \
	-e NLS_LANG="SIMPLIFIED CHINESE_CHINA.AL32UTF8" \
	-v `pwd`/test/oracle.init.sql:/docker-entrypoint-initdb.d/oracle.init.sql \
	$(ORACLE_IMAGE)
	@echo "waiting for test database initializing "
	@timeout=180; while [ $${timeout} -gt 0 ] ; do \
		ready=$$(${DOCKER_CMD} exec d18n-oracle bash -c "source /home/oracle/.bashrc;echo \"select 'Ready' from dual;\" | sqlplus system/oracle@//localhost:1521/xe" 2>/dev/null | grep -c "Ready"); \
		if [ $${ready} -eq 0 ] ; then \
		        timeout=`expr $$timeout - 1`; \
		        printf '.' ;  sleep 1 ; \
		else \
		        echo "." ; echo "mysql test environment is ready!" ; break ; \
		fi ; \
		if [ $${timeout} -eq 0 ] ; then \
		        echo "." ; echo "$(CRED)${DOCKER_CMD} d18n-mysql start timeout(180 s)!$(CEND)" ; exit 1 ; \
		fi ; \
	done

.PHONY: connect-oracle
#@${DOCKER_CMD} exec -it d18n-oracle sqlplus / as sysdba
connect-oracle:
	@${DOCKER_CMD} exec -it d18n-oracle sqlplus system/oracle@//localhost:1521/xe

.PHONY: d18n-oracle
d18n-oracle:
	@${RLWRAP} ./bin/d18n ${D18N_ORACLE_ARGS} -q --verbose

.PHONY: test-oracle
test-oracle:
	# SELECT FROM DUAL
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--query "SELECT 'Hello world', 1, 0.4, '中文', N'中文' FROM DUAL"

	# SHOW TABLES
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--limit 2 \
	--query "SELECT table_name FROM user_tables"

	# SELECT LIMIT
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--query 'SELECT * FROM ot.test_language WHERE ROWNUM <= 2'

	# SELECT TABLE
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--table ot.test_language --limit 2

	# SELECT NVARCHAR
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--query 'SELECT * FROM ot.test_language' \
	--table test_language \
	--file test/oracle.test_language.sql

	# SELECT RAW DATA
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--query 'SELECT * FROM ot.test_raw' \
	--table test_raw \
	--file test/oracle.test_raw.sql

	# SELECT timestamp & scientific notion
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--query 'SELECT * FROM ot.test_ts' \
	--file test/oracle.test_ts.sql

	# SELECT DATETIME, DATE
	@./bin/d18n ${D18N_ORACLE_ARGS} \
	--query 'SELECT sysdate, to_date(sysdate) FROM DUAL'
