MSSQL_PASSWORD='yourStrong(!)Password'

D18N_MSSQL_ARGS=--server sqlserver --host 127.0.0.1 --port 1433 --user sa --password ${MSSQL_PASSWORD}

.PHONY: docker-mssql
docker-mssql: docker-exist
	@${DOCKER_CMD} stop d18n-mssql 2>/dev/null || true
	@${DOCKER_CMD} wait d18n-mssql 2>/dev/null >/dev/null || true
	@${DOCKER_CMD} run -d --rm --name d18n-mssql \
	-e 'ACCEPT_EULA=Y' \
	-e 'SA_PASSWORD=yourStrong(!)Password' \
	-p 1433:1433 \
	-v `pwd`/test/mssql.init.sh:/docker-entrypoint-initdb.d/mssql.init.sh \
	-v `pwd`/test/mssql.init.sql:/docker-entrypoint-initdb.d/mssql.init.sql \
	mcr.microsoft.com/mssql/server:2017-latest
	@${DOCKER_CMD} exec d18n-mssql /docker-entrypoint-initdb.d/mssql.init.sh

.PHONY: connect-mssql
connect-mssql:
	@${DOCKER_CMD} exec -it d18n-mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'yourStrong(!)Password'

.PHONY: d18n-mssql
d18n-mssql:
	@${RLWRAP} ./bin/d18n ${D18N_MSSQL_ARGS} -q --verbose || true

.PHONY: test-mssql
test-mssql:
	# test simple query
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--query "SELECT 'Hello world', 1, 0.4, N'中文'"

	# test declare, like mysql multiStatement
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--query "declare @a int = 2021; select @a"

	# test export result to file
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--hex-blob c1 \
	--query 'SELECT * from "rawdata"' \
	--file test/mssql.rawdata.sql
