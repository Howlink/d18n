# -- show databases
# SELECT name FROM sys.databases WHERE name not in ('master', 'tempdb', 'model', 'msdb');
# -- show tables
# SELECT name FROM [database].sys.tables where is_ms_shipped=0
#
# TSQL Parser generate code
# cd github.com/antlr/grammars-v4/sql/tsql
# antlr4 -Dlanguage=Go -o parser TSqlLexer.g4 TSqlParser.g4

MSSQL_PASSWORD='yourStrong(!)Password'

D18N_MSSQL_ARGS=--server sqlserver --host 127.0.0.1 --port 1433 --user sa --password ${MSSQL_PASSWORD}

.PHONY: docker-mssql
# The full list of env vars in document: https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-linux-2017
docker-mssql: docker-exist
	@${DOCKER_CMD} stop d18n-mssql 2>/dev/null || true
	@${DOCKER_CMD} wait d18n-mssql 2>/dev/null >/dev/null || true
	@${DOCKER_CMD} rm d18n-mssql 2>/dev/null >/dev/null || true
	@${DOCKER_CMD} run -d ${DOCKER_RM} --name d18n-mssql \
	-e 'ACCEPT_EULA=Y' \
	-e 'MSSQL_AGENT_ENABLED=true' \
	-e 'SA_PASSWORD=yourStrong(!)Password' \
	-p 1433:1433 \
	-v `pwd`/test/mssql.init.sh:/docker-entrypoint-initdb.d/mssql.init.sh \
	-v `pwd`/test/mssql.init.sql:/docker-entrypoint-initdb.d/mssql.init.sql \
	-v `pwd`/test/sakila.mssql.sql.gz:/docker-entrypoint-initdb.d/sakila.mssql.sql.gz \
	mcr.microsoft.com/mssql/server:2017-latest
	@${DOCKER_CMD} exec d18n-mssql /docker-entrypoint-initdb.d/mssql.init.sh

.PHONY: connect-mssql
connect-mssql:
	@${DOCKER_CMD} exec -it d18n-mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'yourStrong(!)Password'

.PHONY: d18n-mssql
d18n-mssql:
	@${RLWRAP} ./bin/d18n ${D18N_MSSQL_ARGS} -q --verbose || true

.PHONY: test-mssql
test-mssql:
	# test simple query
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--query "SELECT 'Hello world', 1, 0.4, N'中文'"

	# test declare, like mysql multiStatement
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--query "declare @a int = 2021; select @a"

	# test CHAR
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--query "select top 1 * from sakila.dbo.language;" \
	--file test/mssql.test_char.sql

	# test export result to file
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--hex-blob c1 \
	--query 'SELECT * from "rawdata"' \
	--table rawdata \
	--file test/mssql.rawdata.sql

	# test ROWCOUNT
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--limit 2 \
	--query "SELECT name FROM sys.databases"

	# test []byte
	@./bin/d18n ${D18N_MSSQL_ARGS} \
	--query "SELECT CAST('ABC' AS VARBINARY) AS VARBINARY, CAST(123 AS DECIMAL) AS DECIMAL, NEWID() AS UID;"

